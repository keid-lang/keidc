
namespace test {
    extern function printf(msg: &char, val1: i32, val2: i32)
    extern function puts(msg: &char)
    extern function keid_initialize()

    public class LinkedList {
        head: ?LinkedListNode

        public push(value: TestObject) {
            let current = this.head
            loop {
                if current!.next == null {
                    current!.next = new LinkedListNode {
                        next = null,
                        value,
                    }
                    return
                }
                current = current!.next
            }
        }

        destructor {
            puts("Destroying LinkedList object")
        }
    }

    public class LinkedListNode {
        next: ?LinkedListNode
        value: TestObject

        destructor {
            puts("Destroying LinkedListNode object")
        }
    }

    public class TestObject {
        val1: i32
        val2: i32

        destructor {
            printf("Destroying test object: val1 = %i, val2 = %i\n", this.val1, this.val2)
        }
    }

    public extern function main() {
        keid_initialize()

        let list = new LinkedList {
            head = new LinkedListNode {
                next = null,
                value = new TestObject {
                    val1 = 500,
                    val2 = 1000,
                },
            },
        }

        list.push(new TestObject {
            val1 = 5,
            val2 = 10,
        })

        list.head!.next = new LinkedListNode {
            next = null,
            value = new TestObject {
                val1 = 50,
                val2 = 100,
            },
        }
    }
}
